{"version":3,"sources":["TodoItem.js","TodoList.js","NewTodo.js","TodosFilter.js","App.js","index.js"],"names":["TodoItem","handleTodoStatus","_this","props","changeTodoStatus","todo","id","handleClick","todoId","deleteTodo","_this2","this","title","completed","react_default","a","createElement","key","className","type","checked","onChange","htmlFor","onClick","React","Component","TodoList","_ref","todos","map","item","src_TodoItem","NewTodo","state","inputValue","handleChange","event","setState","target","value","handleSubmit","preventDefault","addNewTodo","onSubmit","placeholder","TodosFilter","tabs","activeTabIndex","i","tab","filterTodos","index","href","FILTER_TYPES","all","active","App","selectedFilter","newTodo","trim","concat","Object","toConsumableArray","Date","objectSpread2","changeAllStatuses","status","filterSelected","filter","clearAllCompletedTodos","getVisibleTodos","src_NewTodo","length","style","display","every","src_TodoList","src_TodosFilter","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9cc8159c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  handleTodoStatus = () => {\n    this.props.changeTodoStatus(this.props.todo.id);\n  };\n\n  handleClick = (todoId) => {\n    this.props.deleteTodo(todoId);\n  };\n\n  render() {\n    const { todo } = this.props;\n    const { id, title, completed } = todo;\n\n    return (\n      <li key={id} className={completed && 'completed'}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onChange={this.handleTodoStatus}\n          />\n          <label htmlFor=\"label\">{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => this.handleClick(id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({ todos, changeTodoStatus, deleteTodo }) {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(item => (\n        <TodoItem\n          todo={item}\n          changeTodoStatus={changeTodoStatus}\n          deleteTodo={deleteTodo}\n        />\n      ))}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addNewTodo(this.state.inputValue);\n\n    this.setState({\n      inputValue: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          value={this.state.inputValue}\n          onChange={this.handleChange}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodosFilter extends React.Component {\n  tabs = ['All', 'Active', 'Completed'];\n\n  state = { activeTabIndex: 0 };\n\n  handleClick = (i, tab) => {\n    this.props.filterTodos(tab);\n    this.setState({ activeTabIndex: i });\n  };\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        {this.tabs.map((tab, index) => (\n          <li>\n            <a\n              href=\"#/\"\n              className={this.state.activeTabIndex === index ? 'selected' : ''}\n              onClick={() => this.handleClick(index, tab)}\n            >\n              {tab}\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodosFilter.propTypes = {\n  filterTodos: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport NewTodo from './NewTodo';\nimport TodosFilter from './TodosFilter';\n\nconst FILTER_TYPES = {\n  all: 'All',\n  completed: 'Completed',\n  active: 'Active',\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedFilter: 'All',\n  };\n\n  addNewTodo = (newTodo) => {\n    if (newTodo.trim() === '') {\n      return;\n    }\n\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          id: +new Date(),\n          title: newTodo,\n          completed: false,\n        },\n      ],\n    }));\n  };\n\n  changeTodoStatus = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map((item) => {\n        if (item.id !== todoId) {\n          return item;\n        }\n\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      }),\n    }));\n  };\n\n  changeAllStatuses = (event) => {\n    const status = event.target.checked;\n\n    this.setState(state => ({\n      todos: state.todos.map(item => ({\n        ...item,\n        completed: status,\n      })),\n    }));\n  };\n\n  filterTodos = (filterSelected) => {\n    this.setState({\n      selectedFilter: filterSelected,\n    });\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.id !== todoId),\n    }));\n  };\n\n  clearAllCompletedTodos = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.completed === false),\n    }));\n  };\n\n  getVisibleTodos = () => this.state.todos.filter((todo) => {\n    switch (this.state.selectedFilter) {\n      case FILTER_TYPES.all:\n        return true;\n      case FILTER_TYPES.active:\n        return todo.completed === false;\n      case FILTER_TYPES.completed:\n        return todo.completed === true;\n      default:\n        return true;\n    }\n  });\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addNewTodo={this.addNewTodo} />\n        </header>\n\n        {(todos.length > 0) && (\n          <section className=\"main\" style={{ display: 'block' }}>\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              checked={todos.every(todo => todo.completed)}\n              onChange={this.changeAllStatuses}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <TodoList\n              todos={this.getVisibleTodos()}\n              changeTodoStatus={this.changeTodoStatus}\n              deleteTodo={this.deleteTodo}\n            />\n          </section>\n        )}\n\n        {(todos.length > 0) && (\n          <footer className=\"footer\" style={{ display: 'block' }}>\n            <span className=\"todo-count\">\n              {todos.filter(item => !item.completed).length}\n              {' '}\n              items left\n            </span>\n\n            <TodosFilter filterTodos={this.filterTodos} />\n\n            {todos.some(item => item.completed === true) && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                style={{ display: 'block' }}\n                onClick={this.clearAllCompletedTodos}\n              >\n                Clear completed\n              </button>\n            )}\n\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}