{"version":3,"sources":["TodoItem.js","TodoList.js","NewTodo.js","TodosFilter.js","App.js","index.js"],"names":["TodoItem","handleTodoStatus","event","_this","props","changeTodoStatus","todo","id","target","checked","handleClick","todoId","deleteTodo","_this2","this","title","completed","react_default","a","createElement","key","className","type","onChange","htmlFor","onClick","React","Component","TodoList","_ref","todos","map","item","src_TodoItem","NewTodo","state","inputValue","handleChange","setState","value","handleSubmit","preventDefault","addNewTodo","onSubmit","placeholder","TodosFilter","tabs","activeTabIndex","i","filterTodos","innerText","tab","index","href","App","selectedFilter","newTodo","reg","RegExp","test","concat","Object","toConsumableArray","Date","status","objectSpread2","changeAllStatuses","filterSelected","filter","clearAllCompletedTodos","visibleTodos","src_NewTodo","length","style","display","every","src_TodoList","src_TodosFilter","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.00274abc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  handleTodoStatus = (event) => {\n    this.props.changeTodoStatus(this.props.todo.id, event.target.checked);\n  };\n\n  handleClick = (todoId) => {\n    this.props.deleteTodo(todoId);\n  };\n\n  render() {\n    const { todo } = this.props;\n    const { id, title, completed } = todo;\n\n    return (\n      <li key={id} className={completed && 'completed'}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onChange={this.handleTodoStatus}\n          />\n          <label htmlFor=\"label\">{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => this.handleClick(id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({ todos, changeTodoStatus, deleteTodo }) {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(item => (\n        <TodoItem\n          todo={item}\n          changeTodoStatus={changeTodoStatus}\n          deleteTodo={deleteTodo}\n        />\n      ))}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addNewTodo(this.state.inputValue);\n\n    this.setState({\n      inputValue: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          value={this.state.inputValue}\n          onChange={this.handleChange}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodosFilter extends React.Component {\n  tabs = ['All', 'Active', 'Completed'];\n\n  state = { activeTabIndex: 0 };\n\n  handleClick = (event, i) => {\n    event.preventDefault();\n    this.props.filterTodos(event.target.innerText);\n    this.setState({ activeTabIndex: i });\n  };\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        {this.tabs.map((tab, index) => (\n          <li>\n            <a\n              href=\"#/\"\n              className={this.state.activeTabIndex === index ? 'selected' : ''}\n              onClick={event => this.handleClick(event, index)}\n            >\n              {tab}\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodosFilter.propTypes = {\n  filterTodos: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport NewTodo from './NewTodo';\nimport TodosFilter from './TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedFilter: 'All',\n  };\n\n  addNewTodo = (newTodo) => {\n    const reg = new RegExp('^\\x20+');\n\n    if (newTodo === '' || reg.test(newTodo)) {\n      return;\n    }\n\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          id: +new Date(),\n          title: newTodo,\n          completed: false,\n        },\n      ],\n    }));\n  };\n\n  changeTodoStatus = (todoId, status) => {\n    this.setState(state => ({\n      todos: state.todos.map((item) => {\n        if (item.id !== todoId) {\n          return item;\n        }\n\n        return {\n          ...item,\n          completed: status,\n        };\n      }),\n    }));\n  };\n\n  changeAllStatuses = (event) => {\n    const status = event.target.checked;\n\n    this.setState(state => ({\n      todos: state.todos.map(item => ({\n        ...item,\n        completed: status,\n      })),\n    }));\n  };\n\n  filterTodos = (filterSelected) => {\n    this.setState({\n      selectedFilter: filterSelected,\n    });\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.id !== todoId),\n    }));\n  };\n\n  clearAllCompletedTodos = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.completed === false),\n    }));\n  };\n\n  visibleTodos = (todo) => {\n    switch (this.state.selectedFilter) {\n      case 'All':\n        return true;\n      case 'Active':\n        return todo.completed === false;\n      case 'Completed':\n        return todo.completed === true;\n      default:\n        return true;\n    }\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addNewTodo={this.addNewTodo} />\n        </header>\n\n        {(todos.length > 0) && (\n          <section className=\"main\" style={{ display: 'block' }}>\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              checked={todos.every(todo => todo.completed)}\n              onChange={this.changeAllStatuses}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <TodoList\n              todos={todos.filter(this.visibleTodos)}\n              changeTodoStatus={this.changeTodoStatus}\n              deleteTodo={this.deleteTodo}\n            />\n          </section>\n        )}\n\n        {(todos.length > 0) && (\n          <footer className=\"footer\" style={{ display: 'block' }}>\n            <span className=\"todo-count\">\n              {todos.filter(item => !item.completed).length}\n              {' '}\n              items left\n            </span>\n\n            <TodosFilter filterTodos={this.filterTodos} />\n\n            {todos.some(item => item.completed === true) && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                style={{ display: 'block' }}\n                onClick={this.clearAllCompletedTodos}\n              >\n                Clear completed\n              </button>\n            )}\n\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}